<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.calmerowl.dao.IUserDao">

    <!-- 配置 查询结果的列名和实体类的属性名的对应关系,如果不同时需要进行配置,相同时可配可不配置-->
    <!--
    <resultMap id="userMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
    </resultMap>
    -->

    <!-- 定义User的resultMap-->
    <resultMap id="userAccountMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!-- 配置user对象中accounts集合的映射 -->
        <collection property="accounts" ofType="account">
            <id column="aid" property="id"></id>
            <result column="uid" property="uid"></result>
            <result column="money" property="money"></result>
        </collection>
    </resultMap>

    <!-- 了解的内容：抽取重复的sql语句-->
    <!--
    <sql id="defaultUser">
        select * from user
    </sql>
    -->

    <!--配置查询所有-->
    <!--
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>
    -->

    <!-- 查询所有 -->
    <select id="findAll" resultMap="userAccountMap">
        select * from user u left outer join account a on u.id = a.uid
    </select>

    <!--配置保存用户-->
    <!--
    <insert id="saveUser" parameterType="user">
        insert into user(username,address,sex,birthday) values(#{username},#{address},#{sex},#{birthday})
    </insert>
    -->

    <!--配置更新用户-->
    <!--
    <select id="updateUser" parameterType="pers.calmerowl.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </select>
    -->

    <!--配置删除用户-->
    <!--
    <select id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{id}
    </select>
    -->

    <!-- 根据id查询用户 -->
    <!--
    <select id="findById" parameterType="INT" resultMap="user">
        select * from user where id = #{uid}
    </select>
    -->
    <select id="findById" parameterType="INT" resultType="user">
        select * from user where id = #{uid}
    </select>

    <!-- 根据名称模糊查询 -->
    <!--
    <select id="findByName" parameterType="string" resultMap="userMap">
          select * from user where username like #{name}
   </select>
   -->

    <!-- 根据queryVo的条件查询用户 -->
    <!--
    <select id="findUserByVo" parameterType="pers.calmerowl.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.username}
    </select>
    -->

    <!-- 根据条件查询
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user where 1=1
        <if test="username != null">
          and username = #{username}
        </if>
        <if test="sex != null">
            and sex = #{sex}
        </if>
    </select>-->

    <!--
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
        </where>
    </select>
    -->

    <!-- 根据queryvo中的Id集合实现查询用户列表 -->
    <!--
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
    -->
</mapper>